server.port=9191

spring.application.name=API-GATEWAY
eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

##Flag that enables DiscoveryClient gateway integration. ????routes,http://localhost:9191/+service id/**
##??http://localhost:9191/employee-service/api/employees/**
##spring.cloud.gateway.discovery.locator.enabled = true

##Option to lower case serviceId in predicates and filters, defaults to false. Useful with eureka when it automatically uppercases serviceId. so MYSERIVCE, would match /myservice/**
##spring.cloud.gateway.discovery.locator.lower-case-service-id = true

##logging.level.org.springframework.cloud.gateway.handler.RoutePredicateHandlerMapping=DEBUG

###????????manually??routes???
## Routes for Employee Service,EMPLOYEE-SERVICE??server registry???, lb?load balance##????http://localhost:8081
spring.cloud.gateway.routes[0].id=EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].uri=lb://EMPLOYEE-SERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/employees/**
##configure destination url
##http://localhost:9191/api/employees,?????????????api gateway????/api/employees???predicate???EMPLOYEE MICROSERVICE

## Routes for DEPARTMENT Service
spring.cloud.gateway.routes[1].id=DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].uri=lb://DEPARTMENT-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/departments/**

## Routes for ORGANIZATION Service
spring.cloud.gateway.routes[2].id=ORGANIZATION-SERVICE
spring.cloud.gateway.routes[2].uri=lb://ORGANIZATION-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/organizations/**

management.tracing.sampling.probability=1.0

### ??cors??
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedOrigins=*
spring.cloud.gateway.globalcors.corsConfigurations.[/**].allowedMethods=GET, POST, PUT, DELETE