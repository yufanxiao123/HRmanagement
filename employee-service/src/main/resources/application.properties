##spring.datasource.url=jdbc:mysql://localhost:3306/employee_db
##spring.datasource.username=root
##spring.datasource.password=123456@mysql

##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
##spring.jpa.hibernate.ddl-auto=update

##server.port=8081
## application??????docker?rabbitmq???????????? rabbitmq????github?????????????????message?????application
spring.rabbitmq.host=localhost
##spring bus ?rabbitmq?port
spring.rabbitmq.port=5672 
spring.rabbitmq.username=guest 
spring.rabbitmq.password=guest

spring.application.name=EMPLOYEE-SERVICE
spring.config.import=optional:configserver:http://localhost:8888
management.tracing.sampling.probability=1.0

##eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/

##Actuator endpoint for Circuit breaker
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health 
##only enable health endpoints, if given *, enable all spring boot actuator endpoints
management.endpoint.health.show-details=always
## show all details for circuit breaker

##Circuit breaker ????
##EMPLOYEE-SERVICE??EmployeeServiceImpl???circuitbreaker?name
##???????https://resilience4j.readme.io/docs/circuitbreaker
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.failureRateThreshold=50
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.waitDurationInOpenState=5000
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowType=COUNT_BASED	
resilience4j.circuitbreaker.instances.EMPLOYEE-SERVICE.slidingWindowSize=10

##Retry???
resilience4j.retry.instances.EMPLOYEE-SERVICE.registerHealthIndicator=true
resilience4j.retry.instances.EMPLOYEE-SERVICE.maxRetryAttempts=5
resilience4j.retry.instances.EMPLOYEE-SERVICE.waitDuration=1s

##use Kafka server, at first, ensure Zookeeper Service and Kafka server running using terminal
##if there is more than one Kafka server running, use comma, eg. localhost:9092, localhost:9093
##spring.kafka.producer.bootstrap-servers: localhost:9092
##spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
##spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
##spring.kafka.topic.name=employee_topics

##Configure for RabbitMQ
rabbitmq.queue.employee.name=employee_email
rabbitmq.exchange.name=employee_exchange
rabbitmq.binding.routing.key=employee_routing_key

rabbitmq.queue.email.name=email_queue
rabbitmq.binding.email.routing.key=email_routing_key

