##spring.datasource.url=jdbc:mysql://localhost:3306/department_db
##spring.datasource.username=root
##spring.datasource.password=123456@mysql

##spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
##spring.jpa.hibernate.ddl-auto=update

##server.port=8080
## application??????docker?rabbitmq???????????? rabbitmq????github?????????????????message?????application
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest


##github????????github????????application name??
spring.application.name=DEPARTMENT-SERVICE
spring.config.import=optional:configserver:http://localhost:8888
##enable refresh endpoint, ??github??????????????????
management.endpoints.web.exposure.include=*
##eureka.instance.client.serverUrl.defaultZone=http://localhost:8761/eureka/
management.tracing.sampling.probability=1.0

##spring.kafka.consumer.bootstrap-servers: localhost:9092
##spring.kafka.consumer.group-id: department
##spring.kafka.consumer.auto-offset-reset: earliest
##spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
##spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
##spring.kafka.consumer.properties.spring.json.trusted.packages=*
## trust all packages that they can be serialized or deserialized to json
##spring.kafka.topic.name=employee_topics

rabbitmq.queue.employee.name=employee_email
